const displayImage = (index) => {
    const realIndex = (currentIndex + index) % slides.length;
    return (
        <div className="highlight-item">
            <img src={slides[realIndex].image} alt={`Image ${realIndex}`} className="highlight-image" />
            <p className="highlight-description">{slides[realIndex].highlightDescription}</p>
        </div>
    );
};


const handleDeleteMarker = (place) => {
    const updatedPlaces = places.filter((p) => p !== place);

    if (routingControl) {
      setRoutingControl(null);
    }

    if (updatedPlaces.length > 1) {
      const newRoutingControl = L.Routing.control({
        waypoints: updatedPlaces.map((p) => L.latLng(p.lat, p.lon)),
        createMarker: (i, waypoint, n) => {
          return null;
        },
      }).addTo(map);

      setRoutingControl(newRoutingControl);
    }
  };

  

<div className="main-back" style={backgroundImageStyle}>
            <Header />
            <main className="main-content">
                <div className="content-container">
                    <h2 className="country-name">{slides[currentIndex].country}</h2>
                    <p className="country-description">{slides[currentIndex].description}</p>
                    <button className="explore-button">Explore &gt;</button>
                </div>
                <div className="highlight-container">
                    <div className="highlight-carousel">
                        {displayImage(0)}
                        {displayImage(1)}
                        {displayImage(2)}
                        {/* Add more displayImage calls as needed */}
                    </div>
                    <button className="next-button" onClick={nextSlide}>Next</button>
                </div>
            </main>
        </div>